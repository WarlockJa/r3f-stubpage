/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.16 public/media/glassshards.glb 
*/

import React from "react";
import { Float, MeshTransmissionMaterial, useGLTF } from "@react-three/drei";
import { useControls } from "leva";

export function Glassshards(props: any) {
  const { nodes, materials } = useGLTF("/media/glassshards.glb");

  return (
    <group {...props} dispose={null}>
      {nodes.Scene.children.map((mesh, index) => {
        return <Mesh data={mesh} key={index} />;
      })}
      {/* <mesh
        geometry={nodes.Plane001.geometry}
        material={nodes.Plane001.material}
        rotation={[Math.PI / 2, 0, 0]}
        scale={0.5}
      />
      <mesh
        geometry={nodes.Plane002.geometry}
        material={nodes.Plane002.material}
        rotation={[Math.PI / 2, 0, 0]}
        scale={0.5}
      />
      <mesh
        geometry={nodes.Plane003.geometry}
        material={nodes.Plane003.material}
        rotation={[Math.PI / 2, 0, 0]}
        scale={0.5}
      />
      <mesh
        geometry={nodes.Plane004.geometry}
        material={nodes.Plane004.material}
        rotation={[Math.PI / 2, 0, 0]}
        scale={0.5}
      />
      <mesh
        geometry={nodes.Plane005.geometry}
        material={nodes.Plane005.material}
        rotation={[Math.PI / 2, 0, 0]}
        scale={0.5}
      />
      <mesh
        geometry={nodes.Plane006.geometry}
        material={nodes.Plane006.material}
        rotation={[Math.PI / 2, 0, 0]}
        scale={0.5}
      />
      <mesh
        geometry={nodes.Plane007.geometry}
        material={nodes.Plane007.material}
        rotation={[Math.PI / 2, 0, 0]}
        scale={0.5}
      />
      <mesh
        geometry={nodes.Plane008.geometry}
        material={nodes.Plane008.material}
        rotation={[Math.PI / 2, 0, 0]}
        scale={0.5}
      />
      <mesh
        geometry={nodes.Plane009.geometry}
        material={nodes.Plane009.material}
        rotation={[Math.PI / 2, 0, 0]}
        scale={0.5}
      />
      <mesh
        geometry={nodes.Plane010.geometry}
        material={nodes.Plane010.material}
        rotation={[Math.PI / 2, 0, 0]}
        scale={0.5}
      />
      <mesh
        geometry={nodes.Plane011.geometry}
        material={nodes.Plane011.material}
        rotation={[Math.PI / 2, 0, 0]}
        scale={0.5}
      />
      <mesh
        geometry={nodes.Plane012.geometry}
        material={nodes.Plane012.material}
        rotation={[Math.PI / 2, 0, 0]}
        scale={0.5}
      />
      <mesh
        geometry={nodes.Plane013.geometry}
        material={nodes.Plane013.material}
        rotation={[Math.PI / 2, 0, 0]}
        scale={0.5}
      />
      <mesh
        geometry={nodes.Plane014.geometry}
        material={nodes.Plane014.material}
        rotation={[Math.PI / 2, 0, 0]}
        scale={0.5}
      /> */}
    </group>
  );
}

useGLTF.preload("/glassshards.glb");

function Mesh({ data }: any) {
  const options = {
    thickness: { value: 0.275, min: 0, max: 1, step: 0.01 },
    ior: { value: 1.8, min: 0, max: 3, step: 0.1 },
    chromaticAberration: { value: 0.75, min: 0, max: 1 },
    resolution: { value: 300 },
  };
  const levaControls = useControls("MeshTransmissionMaterial", options);
  return (
    <Float>
      <mesh {...data}>
        {/* <meshBasicMaterial /> */}
        <MeshTransmissionMaterial
          roughness={0}
          transmission={0.99}
          {...levaControls}
        />
      </mesh>
    </Float>
  );
}
